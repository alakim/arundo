define(["html", "knockout", "const"], function($H, ko, $C){	function template(){with($H){		return div(			h2("Поиск вакансий"),			table({border:0, cellpadding:3, cellspacing:0},				tr(					th("Ключевые слова:"),					td(input({type:"text", "data-bind":"value: keywords"}))				),				tr(					th("Регион:"),					td(select({"data-bind":"options:regions, value:region, optionsValue:'id', optionsText:'name'"}))				),				tr(					th({valign:"top"}, "Рубрика:"),					td(select({size:8, "data-bind":"options:rubrics, value:rubric, optionsValue:'id', optionsText:'name'"}))				),				tr(					th("Зарплата от:"),					td(input({type:"text", "data-bind":"value: salary"}))				),				tr(					th("График:"),					td(select({"data-bind":"options:schedules, value:schedule, optionsValue:'id', optionsText:'name'"}))				),				tr(					th("Показать вакансии:"),					td(						select({"data-bind":"options:counts, value:count"}),						select({"data-bind":"options:periods, value:period, optionsValue:'id', optionsText:'name'"})					)				),				tr(td({colspan:2},					input({type:"button", value:"Искать", "data-bind":"click:send"})				))			)		);	}}		function RequestModel(){var _=this;		_.keywords = ko.observable("");		_.regions = $C.regions;		_.region = ko.observable(_.regions[0]);				_.rubrics = [{id:0, name:"[Все рубрики]"}].concat($C.rubrics);		_.rubric = ko.observable(_.rubrics[0]);				_.salary = ko.observable("");				_.schedules = $C.schedules;		_.schedule = ko.observable(_.schedules[0]);				_.periods = $C.searchOptions.periods;		_.period = ko.observable(_.periods[0]);				_.counts = $C.searchOptions.counts;		_.count = ko.observable(_.counts[0]);				_.getData = function(){			return {				keywords: _.keywords(),				region: _.region(),				rubric: _.rubric(),				salary: _.salary(),				schedule: _.schedule(),				count: _.count(),				period: _.period()			};		},				_.send = function(){			var request = this.getData();			console.log(request);		}	}		return {		view: function(pnl){			pnl.html(template());			ko.applyBindings(new RequestModel());		}	};});